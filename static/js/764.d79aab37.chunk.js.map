{"version":3,"file":"static/js/764.d79aab37.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ListItem.styled.js","components/ContactList/ListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n","import styled from 'styled-components';\nimport { ErrorMessage as FormikError, Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  padding: 8px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: tomato;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: white;\n    background: #188ce8;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Field, Formik } from 'formik';\nimport { Toaster, toast } from 'react-hot-toast';\nimport * as yup from 'yup';\nimport { ErrorMessage, Form, FormField, Button } from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().min(7).required(),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const normalizedName = values.name.toLowerCase();\n    const nameExists = contacts.find(\n      ({ name }) => name.toLowerCase() === normalizedName\n    );\n    if (nameExists) {\n      return toast.error(`${values.name} is already in contacts!`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n        }}\n      />\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <FormField>\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormField>\n          <FormField>\n            Number\n            <Field type=\"tel\" name=\"number\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormField>\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  font-size: 18px;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  /* border: none; */\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: white;\n    background: #188ce8;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdDelete } from 'react-icons/md';\nimport { Item, ItemWrapper, Text, Button } from './ListItem.styled';\n\nexport const ListItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <ItemWrapper>\n        <Text>{name}:</Text>\n        <Text>{number}</Text>\n\n        <Button type=\"button\" onClick={handleDelete}>\n          {/* Delete */}\n          <MdDelete />\n        </Button>\n      </ItemWrapper>\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\nimport { ListItem } from './ListItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  // console.log(contacts);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ListItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  width: 300px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filterContact = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilterChange = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <Label>\n      Filter contacts by name\n      <Input type=\"text\" value={filterContact} onChange={handleFilterChange} />\n    </Label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <div>{isLoading && 'Loading...'}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","value","Form","styled","FormikForm","FormField","ErrorMessage","FormikError","Button","schema","yup","shape","name","required","number","min","ContactForm","useSelector","dispatch","useDispatch","position","toastOptions","duration","initialValues","validationSchema","onSubmit","values","resetForm","normalizedName","toLowerCase","find","toast","addContact","type","component","List","Item","ItemWrapper","Text","ListItem","contact","id","onClick","deleteContact","ContactList","visibleContacts","normalizedFilter","includes","getVisibleContacts","map","Label","Input","Filter","filterContact","onChange","evt","setFilter","target","Contacts","useEffect","fetchContacts"],"sourceRoot":""}